service: dynamodb-performance-testing

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-southeast-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:PutItem"
            - "dynamodb:BatchWriteItem"
          Resource: !GetAtt TestTable.Arn
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource:
            - 'arn:aws:s3:::ca-new-bucket'
            - 'arn:aws:s3:::ca-new-bucket/*'
                   
  environment:
    TABLE_NAME: !Ref TestTable

functions:
  putItem:
    handler: put.handler
  batchWriteItem5:
    handler: batch_write.handler
    environment:
      BATCH_ITEM_COUNT: 5
  batchWriteItem25:
    handler: batch_write.handler
    environment:
      BATCH_ITEM_COUNT: 100
  transactWriteItem5:
    handler: transact_write.handler
    environment:
      TRANSACT_ITEM_COUNT: 5
      FAIL: False
  transactWriteItem25:
    handler: transact_write.handler
    environment:
      TRANSACT_ITEM_COUNT: 25
      FAIL: False
  transactWriteItem5Fail:
    handler: transact_write.handler
    environment:
      TRANSACT_ITEM_COUNT: 5
      FAIL: True
  batchWriteCSVItem:
    handler: batch_write_csv.lambda_handler
    memorySize: 3008 # optional, in MB, default is 1024
    timeout: 900
    environment:
      BATCH_ITEM_COUNT: 100

resources:
  Resources:
    TestTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'DynamoTestCSVTable01'
        AttributeDefinitions:
          - AttributeName: 'Id'
            AttributeType: 'S'
        KeySchema: 
          - AttributeName: 'Id'
            KeyType: 'HASH'
        BillingMode: 'PAY_PER_REQUEST'